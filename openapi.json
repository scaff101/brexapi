{"openapi": "3.1.0", "info": {"title": "Codyco Platform", "version": "0.1.0"}, "paths": {"/api/v1/login/access-token": {"post": {"tags": ["login"], "summary": "Login Access Token", "description": "OAuth2 compatible token login, get an access token for future requests.", "operationId": "login-login_access_token", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_login-login_access_token"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Token"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/login/test-token": {"post": {"tags": ["login"], "summary": "Test Token", "description": "Test access token.", "operationId": "login-test_token", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/password-recovery/{email}": {"post": {"tags": ["login"], "summary": "Recover Password", "description": "Password Recovery.", "operationId": "login-recover_password", "parameters": [{"name": "email", "in": "path", "required": true, "schema": {"type": "string", "title": "Email"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/reset-password/": {"post": {"tags": ["login"], "summary": "Reset Password", "description": "Reset password.", "operationId": "login-reset_password", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/NewPassword"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/password-recovery-html-content/{email}": {"post": {"tags": ["login"], "summary": "Recover Password Html Content", "description": "HTML Content for Password Recovery.", "operationId": "login-recover_password_html_content", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "email", "in": "path", "required": true, "schema": {"type": "string", "title": "Email"}}], "responses": {"200": {"description": "Successful Response", "content": {"text/html": {"schema": {"type": "string"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/assistants/": {"get": {"tags": ["assistants"], "summary": "Read Assistants", "description": "Retrieve assistants for the current user.", "operationId": "assistants-read_assistants", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AssistantsPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["assistants"], "summary": "Create Assistant", "description": "Create new assistant.", "operationId": "assistants-create_assistant", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AssistantCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AssistantPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/assistants/{id}": {"get": {"tags": ["assistants"], "summary": "Read Assistant", "description": "Get assistant by ID.", "operationId": "assistants-read_assistant", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AssistantPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["assistants"], "summary": "Update Assistant", "description": "Update an assistant.", "operationId": "assistants-update_assistant", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AssistantUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AssistantPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["assistants"], "summary": "Delete Assistant", "description": "Delete an assistant.", "operationId": "assistants-delete_assistant", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/appointments/": {"post": {"tags": ["appointments"], "summary": "Create Appointment", "description": "Create a new appointment.", "operationId": "appointments-create_appointment", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppointmentCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppointmentResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["appointments"], "summary": "Get Appointments", "description": "Get appointments with pagination.", "operationId": "appointments-get_appointments", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "start_date", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Start Date"}}, {"name": "end_date", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "End Date"}}, {"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/AppointmentStatus"}, {"type": "null"}], "title": "Status"}}, {"name": "page", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 1, "description": "Page number", "default": 1, "title": "Page"}, "description": "Page number"}, {"name": "page_size", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "description": "Number of items per page", "default": 10, "title": "Page Size"}, "description": "Number of items per page"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppointmentList"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/appointments/{appointment_id}": {"get": {"tags": ["appointments"], "summary": "Get Appointment", "description": "Get an appointment by ID.", "operationId": "appointments-get_appointment", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "appointment_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Appointment Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppointmentResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["appointments"], "summary": "Update Appointment", "description": "Update an appointment.", "operationId": "appointments-update_appointment", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "appointment_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Appointment Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppointmentUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppointmentResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["appointments"], "summary": "Delete Appointment", "description": "Delete an appointment.", "operationId": "appointments-delete_appointment", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "appointment_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Appointment Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/appointments/{appointment_id}/status": {"patch": {"tags": ["appointments"], "summary": "Update Participant Status", "description": "Update the participant's status for an appointment.", "operationId": "appointments-update_participant_status", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "appointment_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Appointment Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ParticipantStatusUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/items/": {"get": {"tags": ["items"], "summary": "Read Items", "description": "Retrieve items.", "operationId": "items-read_items", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemsPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["items"], "summary": "Create Item", "description": "Create new item.", "operationId": "items-create_item", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/items/{id}": {"get": {"tags": ["items"], "summary": "Read Item", "description": "Get item by ID.", "operationId": "items-read_item", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["items"], "summary": "Update Item", "description": "Update an item.", "operationId": "items-update_item", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["items"], "summary": "Delete Item", "description": "Delete an item.", "operationId": "items-delete_item", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/calls/sip2-inbound": {"post": {"tags": ["calls"], "summary": "Sip2 Inbound", "description": "This is the main function that handles the incoming call.", "operationId": "calls-sip2_inbound", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/calls/telnyx-v2-webhook": {"post": {"tags": ["calls"], "summary": "Telnyx V2 Webhook", "description": "Handle Telnyx Voice API v2 webhooks and answer with media streaming.\n\nWe respond to initial call events by answering the call and requesting the\nmedia stream over our existing websocket endpoint.", "operationId": "calls-telnyx_v2_webhook", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/calls/transfer-status": {"post": {"tags": ["calls"], "summary": "Transfer Status Webhook", "description": "Receives webhooks for the status of the transferred call leg (Leg B).", "operationId": "calls-transfer_status_webhook", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/customers/": {"get": {"tags": ["customers"], "summary": "Read Customers", "description": "Retrieve customers with optional filtering and pagination.", "operationId": "customers-read_customers", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/CustomerStatus"}, {"type": "null"}], "title": "Status"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CustomersPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["customers"], "summary": "Create Customer", "description": "Create new customer.", "operationId": "customers-create_customer", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CustomerCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CustomerPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/customers/{customer_id}": {"get": {"tags": ["customers"], "summary": "Read Customer", "description": "Get customer by ID.", "operationId": "customers-read_customer", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "customer_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Customer Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CustomerPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["customers"], "summary": "Update Customer", "description": "Update a customer.", "operationId": "customers-update_customer", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "customer_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Customer Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CustomerUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CustomerPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["customers"], "summary": "Delete Customer", "description": "Delete a customer.", "operationId": "customers-delete_customer", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "customer_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Customer Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/customers/{customer_id}/status": {"put": {"tags": ["customers"], "summary": "Update Customer Status", "description": "Update a customer's status.", "operationId": "customers-update_customer_status", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "customer_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Customer Id"}}, {"name": "status", "in": "query", "required": true, "schema": {"$ref": "#/components/schemas/CustomerStatus"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CustomerPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/customers/{customer_id}/tags": {"post": {"tags": ["customers"], "summary": "Add Customer Tags", "description": "Add tags to a customer.", "operationId": "customers-add_customer_tags", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "customer_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Customer Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "array", "items": {"type": "string"}, "title": "Tags"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CustomerPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["customers"], "summary": "Remove Customer Tags", "description": "Remove tags from a customer.", "operationId": "customers-remove_customer_tags", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "customer_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Customer Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "array", "items": {"type": "string"}, "title": "Tags"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CustomerPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/utils/health-check/": {"get": {"tags": ["utils"], "summary": "Health Check", "description": "Health check.", "operationId": "utils-health_check", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "boolean", "title": "Response Utils-Health Check"}}}}}}}, "/api/v1/users/": {"get": {"tags": ["users"], "summary": "Read Users", "description": "Retrieve users.", "operationId": "users-read_users", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UsersPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["users"], "summary": "Create User", "description": "Create new user.", "operationId": "users-create_user", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/me": {"get": {"tags": ["users"], "summary": "Read User Me", "description": "Get current user.", "operationId": "users-read_user_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "delete": {"tags": ["users"], "summary": "Delete User Me", "description": "Delete own user.", "operationId": "users-delete_user_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "patch": {"tags": ["users"], "summary": "Update User Me", "description": "Update own user.", "operationId": "users-update_user_me", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdateMe"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/users/me/password": {"patch": {"tags": ["users"], "summary": "Update Password Me", "description": "Update own password.", "operationId": "users-update_password_me", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdatePassword"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/users/signup": {"post": {"tags": ["users"], "summary": "Register User", "description": "Create new user without the need to be logged in.", "operationId": "users-register_user", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRegister"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/{user_id}": {"get": {"tags": ["users"], "summary": "Read User By Id", "description": "Get a specific user by id.", "operationId": "users-read_user_by_id", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["users"], "summary": "Update User", "description": "Update a user.", "operationId": "users-update_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["users"], "summary": "Delete User", "description": "Delete a user.", "operationId": "users-delete_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/conversations/rooms/": {"get": {"tags": ["conversations", "conversations"], "summary": "Get chat rooms", "description": "Retrieve chat rooms of current user with sender information.", "operationId": "conversations-read_chat_rooms", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 50, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChatRoomsWithSender"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["conversations", "conversations"], "summary": "Create chat room", "description": "Create a new chat room.", "operationId": "conversations-create_chat_room", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChatRoomCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChatRoomPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/conversations/rooms/{room_id}": {"get": {"tags": ["conversations", "conversations"], "summary": "Get chat room by ID", "description": "Retrieve a specific chat room by its ID.", "operationId": "conversations-read_chat_room", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "room_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Room Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChatRoomPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["conversations", "conversations"], "summary": "Update chat room", "description": "Update an existing chat room.", "operationId": "conversations-update_chat_room", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "room_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Room Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChatRoomUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChatRoomPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["conversations", "conversations"], "summary": "Delete chat room", "description": "Delete an existing chat room.", "operationId": "conversations-delete_chat_room", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "room_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Room Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/conversations/logs/": {"get": {"tags": ["conversations"], "summary": "Read Conversation Logs", "description": "Retrieve conversation logs. Optionally filter by chat_room_id.", "operationId": "conversations-read_conversation_logs", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "chat_room_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Chat Room Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConversationLogsPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["conversations"], "summary": "Create Conversation Log", "description": "Create new conversation log.", "operationId": "conversations-create_conversation_log", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConversationLogCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConversationLogPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/conversations/logs/{id}": {"get": {"tags": ["conversations"], "summary": "Read Conversation Log", "description": "Get conversation log by ID.", "operationId": "conversations-read_conversation_log", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConversationLogPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["conversations"], "summary": "Update Conversation Log", "description": "Update a conversation log.", "operationId": "conversations-update_conversation_log", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConversationLogUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConversationLogPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["conversations"], "summary": "Delete Conversation Log", "description": "Delete a conversation log.", "operationId": "conversations-delete_conversation_log", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/messages/": {"get": {"tags": ["messages"], "summary": "Read Messages", "description": "Retrieve messages. Optionally filter by chat_room_id.", "operationId": "messages-read_messages", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "chat_room_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Chat Room Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessagesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["messages"], "summary": "Create Message", "description": "Create new message.", "operationId": "messages-create_message", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessagePublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/messages/{id}": {"get": {"tags": ["messages"], "summary": "Read Message", "description": "Get message by ID.", "operationId": "messages-read_message", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessagePublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["messages"], "summary": "Update Message", "description": "Update a message.", "operationId": "messages-update_message", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessagePublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["messages"], "summary": "Delete Message", "description": "Delete a message.", "operationId": "messages-delete_message", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/shareable-links/": {"get": {"tags": ["shareable-links"], "summary": "Read Shareable Links", "description": "Retrieve user's shareable links with optional filtering and pagination.", "operationId": "shareable-links-read_shareable_links", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "is_active", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinksPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["shareable-links"], "summary": "Create Shareable Link", "description": "Create new shareable link.", "operationId": "shareable-links-create_shareable_link", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinkCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinkPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/shareable-links/{link_id}": {"get": {"tags": ["shareable-links"], "summary": "Read Shareable Link", "description": "Get shareable link by ID.", "operationId": "shareable-links-read_shareable_link", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "link_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Link Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinkPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["shareable-links"], "summary": "Update Shareable Link", "description": "Update a shareable link.", "operationId": "shareable-links-update_shareable_link", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "link_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Link Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinkUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinkPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["shareable-links"], "summary": "Delete Shareable Link", "description": "Delete a shareable link.", "operationId": "shareable-links-delete_shareable_link", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "link_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Link Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/shareable-links/{link_id}/deactivate": {"put": {"tags": ["shareable-links"], "summary": "Deactivate Shareable Link", "description": "Deactivate a shareable link (soft delete).", "operationId": "shareable-links-deactivate_shareable_link", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "link_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Link Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinkPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/shareable-links/shared/{share_token}": {"get": {"tags": ["shareable-links"], "summary": "Access Shared Link", "description": "Public endpoint to access a shared link by token.", "operationId": "shareable-links-access_shared_link", "parameters": [{"name": "share_token", "in": "path", "required": true, "schema": {"type": "string", "title": "Share Token"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinkPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/shareable-links/customer/{customer_id}": {"get": {"tags": ["shareable-links"], "summary": "Read Customer Shareable Links", "description": "Get shareable links for a specific customer.", "operationId": "shareable-links-read_customer_shareable_links", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "customer_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Customer Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "is_active", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinksPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/shareable-links/conversation/{conversation_id}": {"get": {"tags": ["shareable-links"], "summary": "Read Conversation Shareable Links", "description": "Get shareable links for a specific conversation.", "operationId": "shareable-links-read_conversation_shareable_links", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "conversation_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Conversation Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "is_active", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinksPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/shareable-links/quick/customer/{customer_id}": {"post": {"tags": ["shareable-links"], "summary": "Create Customer Quick Link", "description": "Create a quick shareable link for a customer.", "operationId": "shareable-links-create_customer_quick_link", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "customer_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Customer Id"}}, {"name": "title", "in": "query", "required": true, "schema": {"type": "string", "description": "Title for the shareable link", "title": "Title"}, "description": "Title for the shareable link"}, {"name": "days_valid", "in": "query", "required": false, "schema": {"type": "integer", "description": "Number of days the link should be valid", "default": 7, "title": "Days Valid"}, "description": "Number of days the link should be valid"}, {"name": "max_accesses", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "description": "Maximum number of accesses", "title": "Max Accesses"}, "description": "Maximum number of accesses"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinkPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/shareable-links/quick/conversation/{conversation_id}": {"post": {"tags": ["shareable-links"], "summary": "Create Conversation Quick Link", "description": "Create a quick shareable link for a conversation.", "operationId": "shareable-links-create_conversation_quick_link", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "conversation_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Conversation Id"}}, {"name": "title", "in": "query", "required": true, "schema": {"type": "string", "description": "Title for the shareable link", "title": "Title"}, "description": "Title for the shareable link"}, {"name": "days_valid", "in": "query", "required": false, "schema": {"type": "integer", "description": "Number of days the link should be valid", "default": 7, "title": "Days Valid"}, "description": "Number of days the link should be valid"}, {"name": "max_accesses", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "description": "Maximum number of accesses", "title": "Max Accesses"}, "description": "Maximum number of accesses"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinkPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/shareable-links/shared/{share_token}/update-customer-data": {"patch": {"tags": ["shareable-links"], "summary": "Update Guest Customer Data Via Shared Link", "description": "Update guest customer data in PMS and local database via shared link.\n\nThis endpoint allows updating guest customer data (email, first name, last name)\nthrough a shareable link that was created during a hotel booking process.\nIt performs the following operations:\n\n1. Validates the shareable link token and checks if it's active\n2. Validates the provided customer data\n3. Extracts booking data from the link's extra_data field\n4. Retrieves guest_id from the PMS reservation result\n5. Updates guest data in the PMS system (Sihot/Apaleo)\n6. Updates customer data in the local database\n7. Updates booking data in the shareable link's extra_data\n8. Tracks access to the shareable link\n\nThe shareable link must contain booking data with:\n- _type: \"hotel_reservation\"\n- booking_data.pms_reservation_result.guest_id\n- booking_data.booking_pms_type (sihot/apaleo)\n\nExample usage:\n```\nPATCH /api/v1/shareable-links/shared/{share_token}/update-customer-data\nContent-Type: application/json\n\n{\n    \"email\": \"guest@newemail.com\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\"\n}\n```\n\nArgs:\n    share_token: The unique token from the shareable link\n    request: Customer data update request containing email, first_name, and last_name (all required)\n    shareable_link_dao: DAO for shareable link operations\n    customer_dao: DAO for customer operations\n    assistant_dao: DAO for assistant operations\n\nReturns:\n    Updated shareable link object with access tracking\n\nRaises:\n    HTTPException 404: If shareable link not found or inactive\n    HTTPException 400: If booking data is invalid or missing\n    HTTPException 422: If customer data format is invalid\n    HTTPException 422: If PMS service is unavailable", "operationId": "shareable-links-update_guest_customer_data_via_shared_link", "parameters": [{"name": "share_token", "in": "path", "required": true, "schema": {"type": "string", "title": "Share Token"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CustomerDataUpdateRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinkPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/shareable-links/admin/expired": {"get": {"tags": ["shareable-links"], "summary": "Get Expired Links", "description": "Get expired shareable links (admin only).", "operationId": "shareable-links-get_expired_links", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ShareableLinksPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/shareable-links/admin/cleanup-expired": {"post": {"tags": ["shareable-links"], "summary": "Cleanup Expired Links", "description": "Cleanup expired shareable links (admin only).", "operationId": "shareable-links-cleanup_expired_links", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/shareable-links/admin/cleanup-max-access": {"post": {"tags": ["shareable-links"], "summary": "Cleanup Max Access Links", "description": "Cleanup links that exceeded max access count (admin only).", "operationId": "shareable-links-cleanup_max_access_links", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/tasks/": {"get": {"tags": ["tasks"], "summary": "Read Tasks", "description": "Retrieve tasks with optional filtering.\n\nGets a list of tasks that the current user has access to, with optional\nfiltering by status, assignee, or chat room.\n\nArgs:\n    session: Database session dependency\n    current_user: Current authenticated user\n    status: Optional status to filter tasks\n    assignee_id: Optional assignee ID to filter tasks\n    chat_room_id: Optional chat room ID to filter tasks\n    skip: Number of records to skip for pagination\n    limit: Maximum number of records to return\n\nReturns:\n    TasksPublic object containing the list of tasks and total count", "operationId": "tasks-read_tasks", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/TaskStatus"}, {"type": "null"}], "title": "Status"}}, {"name": "assignee_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Assignee Id"}}, {"name": "chat_room_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Chat Room Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TasksPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["tasks"], "summary": "Create Task", "description": "Create new task.\n\nCreates a new task with the current user as the creator.\n\nArgs:\n    session: Database session dependency\n    current_user: Current authenticated user\n    task_in: TaskCreate object containing the task data\n\nReturns:\n    TaskPublic object containing the created task data", "operationId": "tasks-create_task", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/tasks/{id}": {"get": {"tags": ["tasks"], "summary": "Read Task", "description": "Get task by ID.\n\nRetrieves a specific task by its ID, ensuring the user has access to it.\n\nArgs:\n    session: Database session dependency\n    current_user: Current authenticated user\n    id: Task ID to retrieve\n\nReturns:\n    TaskPublic object containing the task data\n\nRaises:\n    HTTPException: If task not found or access denied", "operationId": "tasks-read_task", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["tasks"], "summary": "Update Task", "description": "Update a task.\n\nUpdates an existing task, ensuring the user has access to it.\n\nArgs:\n    session: Database session dependency\n    current_user: Current authenticated user\n    id: Task ID to update\n    task_in: TaskUpdate object containing the updated data\n\nReturns:\n    TaskPublic object containing the updated task data\n\nRaises:\n    HTTPException: If task not found or access denied", "operationId": "tasks-update_task", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["tasks"], "summary": "Delete Task", "description": "Delete a task.\n\nDeletes an existing task, ensuring the user has access to it.\n\nArgs:\n    session: Database session dependency\n    current_user: Current authenticated user\n    id: Task ID to delete\n\nReturns:\n    GenericResponseModel with success message\n\nRaises:\n    HTTPException: If task not found or access denied", "operationId": "tasks-delete_task", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/integrations/": {"get": {"tags": ["integrations"], "summary": "Read Integrations", "description": "Retrieve integrations for the current user.", "operationId": "integrations-read_integrations", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IntegrationsPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["integrations"], "summary": "Create Integration", "description": "Create new integration.", "operationId": "integrations-create_integration", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IntegrationCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IntegrationPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/integrations/{id}": {"get": {"tags": ["integrations"], "summary": "Read Integration", "description": "Get integration by ID.", "operationId": "integrations-read_integration", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IntegrationPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["integrations"], "summary": "Update Integration", "description": "Update an integration.", "operationId": "integrations-update_integration", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IntegrationUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IntegrationPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["integrations"], "summary": "Delete Integration", "description": "Delete an integration.", "operationId": "integrations-delete_integration", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenericResponseModel"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/integrations/{id}/update-status": {"post": {"tags": ["integrations"], "summary": "Update Integration Status", "description": "Update integration status.", "operationId": "integrations-update_integration_status", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_integrations-update_integration_status"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IntegrationPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/private/users/": {"post": {"tags": ["private"], "summary": "Create User", "description": "Create a new user.", "operationId": "private-create_user", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PrivateUserCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"AgenticFlowID": {"type": "string", "enum": ["GENERAL_QA_FLOW", "ADVANCED_AGENTIC_FLOW", "REALTIME_AGENT", "GENERAL_QA_MULTI_LANG", "RECEPTION_AI_AGENT"], "title": "AgenticFlowID", "description": "Agentic flow ID."}, "AppointmentCreate": {"properties": {"title": {"type": "string", "maxLength": 255, "title": "Title"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "start_time": {"type": "string", "format": "date-time", "title": "Start Time"}, "end_time": {"type": "string", "format": "date-time", "title": "End Time"}, "location": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Location"}, "is_all_day": {"type": "boolean", "title": "Is All Day", "default": false}, "status": {"$ref": "#/components/schemas/AppointmentStatus", "default": "scheduled"}, "assignee_id": {"type": "string", "format": "uuid", "title": "Assignee Id"}, "customer_creator_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Customer Creator Id"}, "user_creator_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "User Creator Id"}, "participants": {"items": {"$ref": "#/components/schemas/ParticipantCreate"}, "type": "array", "title": "Participants", "default": []}}, "type": "object", "required": ["title", "start_time", "end_time", "assignee_id"], "title": "AppointmentCreate", "description": "Appointment create model."}, "AppointmentList": {"properties": {"items": {"items": {"$ref": "#/components/schemas/AppointmentResponse"}, "type": "array", "title": "Items"}, "total": {"type": "integer", "title": "Total"}}, "type": "object", "required": ["items", "total"], "title": "AppointmentList", "description": "Appointment list model."}, "AppointmentResponse": {"properties": {"title": {"type": "string", "maxLength": 255, "title": "Title"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "start_time": {"type": "string", "format": "date-time", "title": "Start Time"}, "end_time": {"type": "string", "format": "date-time", "title": "End Time"}, "location": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Location"}, "is_all_day": {"type": "boolean", "title": "Is All Day", "default": false}, "status": {"$ref": "#/components/schemas/AppointmentStatus", "default": "scheduled"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "customer_creator_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Customer Creator Id"}, "user_creator_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "User Creator Id"}, "assignee_id": {"type": "string", "format": "uuid", "title": "Assignee Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "participants": {"items": {"$ref": "#/components/schemas/ParticipantPublic"}, "type": "array", "title": "Participants", "default": []}}, "type": "object", "required": ["title", "start_time", "end_time", "id", "assignee_id", "created_at", "updated_at"], "title": "AppointmentResponse", "description": "Appointment response model."}, "AppointmentStatus": {"type": "string", "enum": ["scheduled", "cancelled", "completed"], "title": "AppointmentStatus", "description": "Appointment status."}, "AppointmentUpdate": {"properties": {"title": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Title"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "start_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Start Time"}, "end_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "End Time"}, "location": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Location"}, "is_all_day": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is All Day"}, "status": {"anyOf": [{"$ref": "#/components/schemas/AppointmentStatus"}, {"type": "null"}]}, "participants": {"anyOf": [{"items": {"type": "string", "format": "uuid"}, "type": "array"}, {"type": "null"}], "title": "Participants"}}, "type": "object", "title": "AppointmentUpdate", "description": "Appointment update model."}, "AssistantCreate": {"properties": {"name": {"type": "string", "title": "Name"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "type": {"$ref": "#/components/schemas/AssistantType"}, "agentic_flow_id": {"$ref": "#/components/schemas/AgenticFlowID", "default": "GENERAL_QA_FLOW"}, "character_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Character Name", "description": "Character name for the assistant used in Voice model intro."}, "voice_id": {"type": "string", "title": "Voice Id", "default": "leonnie_de"}, "background_audio_id": {"$ref": "#/components/schemas/BackgroundAudioID", "default": "none"}, "classification_agent_config": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Classification Agent Config"}, "human_transfer_request_config": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Human Transfer Request Config", "description": "Human transfer request configuration with forwarding rules and conditions"}, "forward_email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Forward Email", "description": "Email address that can be used to send emails from this assistant"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "system_prompt": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "System Prompt"}, "language": {"type": "string", "title": "Language", "default": "en"}, "assistant_instructions": {"type": "string", "title": "Assistant Instructions", "default": ""}, "gemini_cache_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Gemini Cache Name", "description": "Gemini cache resource name for optimized knowledge base queries"}, "pms_type": {"anyOf": [{"$ref": "#/components/schemas/PMSType"}, {"type": "null"}], "description": "Preferred PMS system type for booking operations"}, "phone_prefix_lang_detect": {"type": "boolean", "title": "Phone Prefix Lang Detect", "description": "Enable language detection based on phone number prefix", "default": false}, "owner_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Owner Id"}, "integration_ids": {"anyOf": [{"items": {"type": "string", "format": "uuid"}, "type": "array"}, {"type": "null"}], "title": "Integration Ids"}}, "type": "object", "required": ["name", "type"], "title": "AssistantCreate", "description": "Assistant create model."}, "AssistantPublic": {"properties": {"name": {"type": "string", "title": "Name"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "type": {"$ref": "#/components/schemas/AssistantType"}, "agentic_flow_id": {"$ref": "#/components/schemas/AgenticFlowID", "default": "GENERAL_QA_FLOW"}, "character_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Character Name", "description": "Character name for the assistant used in Voice model intro."}, "voice_id": {"type": "string", "title": "Voice Id", "default": "leonnie_de"}, "background_audio_id": {"$ref": "#/components/schemas/BackgroundAudioID", "default": "none"}, "classification_agent_config": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Classification Agent Config"}, "human_transfer_request_config": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Human Transfer Request Config", "description": "Human transfer request configuration with forwarding rules and conditions"}, "forward_email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Forward Email", "description": "Email address that can be used to send emails from this assistant"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "system_prompt": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "System Prompt"}, "language": {"type": "string", "title": "Language", "default": "en"}, "assistant_instructions": {"type": "string", "title": "Assistant Instructions", "default": ""}, "gemini_cache_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Gemini Cache Name", "description": "Gemini cache resource name for optimized knowledge base queries"}, "pms_type": {"anyOf": [{"$ref": "#/components/schemas/PMSType"}, {"type": "null"}], "description": "Preferred PMS system type for booking operations"}, "phone_prefix_lang_detect": {"type": "boolean", "title": "Phone Prefix Lang Detect", "description": "Enable language detection based on phone number prefix", "default": false}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "integration_ids": {"items": {"type": "string", "format": "uuid"}, "type": "array", "title": "Integration Ids", "default": []}}, "type": "object", "required": ["name", "type", "id", "owner_id", "created_at", "updated_at"], "title": "AssistantPublic", "description": "Public assistant model."}, "AssistantType": {"type": "string", "enum": ["phone", "email", "sms", "whatsapp"], "title": "AssistantType", "description": "Assistant type."}, "AssistantUpdate": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "type": {"anyOf": [{"$ref": "#/components/schemas/AssistantType"}, {"type": "null"}]}, "agentic_flow_id": {"anyOf": [{"$ref": "#/components/schemas/AgenticFlowID"}, {"type": "null"}]}, "is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}, "system_prompt": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "System Prompt"}, "language": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Language"}, "assistant_instructions": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Assistant Instructions"}, "voice_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Voice Id"}, "classification_agent_config": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Classification Agent Config"}, "human_transfer_request_config": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Human Transfer Request Config"}, "forward_email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Forward Email"}, "background_audio_id": {"anyOf": [{"$ref": "#/components/schemas/BackgroundAudioID"}, {"type": "null"}]}, "pms_type": {"anyOf": [{"$ref": "#/components/schemas/PMSType"}, {"type": "null"}]}, "phone_prefix_lang_detect": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Phone Prefix Lang Detect"}, "integration_ids": {"anyOf": [{"items": {"type": "string", "format": "uuid"}, "type": "array"}, {"type": "null"}], "title": "Integration Ids"}}, "type": "object", "title": "AssistantUpdate", "description": "Assistant update model."}, "AssistantsPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/AssistantPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "AssistantsPublic", "description": "Assistants public model."}, "BackgroundAudioID": {"type": "string", "enum": ["none", "office", "office_24", "office_pos", "clinic"], "title": "BackgroundAudioID", "description": "Background audio options for the voice bot."}, "Body_integrations-update_integration_status": {"properties": {"status": {"type": "string", "title": "Status"}, "error_message": {"type": "string", "title": "Error Message"}}, "type": "object", "required": ["status"], "title": "Body_integrations-update_integration_status"}, "Body_login-login_access_token": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "password"}, {"type": "null"}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_login-login_access_token"}, "ChannelType": {"type": "string", "enum": ["email", "phone", "whatsapp", "web", "sms"], "title": "ChannelType", "description": "Channel type."}, "ChatRoomCreate": {"properties": {"last_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Message"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "chat_type": {"$ref": "#/components/schemas/ChatRoomType", "default": "general"}, "sender_id": {"type": "string", "format": "uuid", "title": "Sender Id"}, "receiver_id": {"type": "string", "format": "uuid", "title": "Receiver Id"}}, "type": "object", "required": ["sender_id", "receiver_id"], "title": "ChatRoomCreate", "description": "Chat room create model."}, "ChatRoomPublic": {"properties": {"last_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Message"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "chat_type": {"$ref": "#/components/schemas/ChatRoomType", "default": "general"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "sender_id": {"type": "string", "format": "uuid", "title": "Sender Id"}, "receiver_id": {"type": "string", "format": "uuid", "title": "Receiver Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["id", "sender_id", "receiver_id", "created_at", "updated_at"], "title": "ChatRoomPublic", "description": "Chat room public model."}, "ChatRoomType": {"type": "string", "enum": ["support", "sales", "general", "onboarding"], "title": "ChatRoomType", "description": "Chat room type."}, "ChatRoomUpdate": {"properties": {"last_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Message"}, "is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}, "chat_type": {"$ref": "#/components/schemas/ChatRoomType", "default": "general"}}, "type": "object", "title": "ChatRoomUpdate", "description": "Chat room update model."}, "ChatRoomWithSender": {"properties": {"last_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Message"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "chat_type": {"$ref": "#/components/schemas/ChatRoomType", "default": "general"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "sender_id": {"type": "string", "format": "uuid", "title": "Sender Id"}, "receiver_id": {"type": "string", "format": "uuid", "title": "Receiver Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "sender": {"$ref": "#/components/schemas/CustomerPublic"}}, "type": "object", "required": ["id", "sender_id", "receiver_id", "created_at", "updated_at", "sender"], "title": "ChatRoomWithSender", "description": "Chat room with sender model."}, "ChatRoomsWithSender": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ChatRoomWithSender"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "ChatRoomsWithSender", "description": "Chat rooms with sender model."}, "ConversationLogCreate": {"properties": {"duration": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Duration"}, "channel": {"$ref": "#/components/schemas/ChannelType"}, "status": {"type": "string", "title": "Status", "default": "completed"}, "notes": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Notes"}, "extra_data": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Extra Data"}, "id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Id"}, "chat_room_id": {"type": "string", "format": "uuid", "title": "Chat Room Id"}, "user_id": {"type": "string", "format": "uuid", "title": "User Id"}, "customer_id": {"type": "string", "format": "uuid", "title": "Customer Id"}, "started_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Started At"}, "ended_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Ended At"}}, "type": "object", "required": ["channel", "chat_room_id", "user_id", "customer_id"], "title": "ConversationLogCreate", "description": "Conversation log create model."}, "ConversationLogPublic": {"properties": {"duration": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Duration"}, "channel": {"$ref": "#/components/schemas/ChannelType"}, "status": {"type": "string", "title": "Status", "default": "completed"}, "notes": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Notes"}, "extra_data": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Extra Data"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "chat_room_id": {"type": "string", "format": "uuid", "title": "Chat Room Id"}, "user_id": {"type": "string", "format": "uuid", "title": "User Id"}, "customer_id": {"type": "string", "format": "uuid", "title": "Customer Id"}, "started_at": {"type": "string", "format": "date-time", "title": "Started At"}, "ended_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Ended At"}}, "type": "object", "required": ["channel", "id", "chat_room_id", "user_id", "customer_id", "started_at", "ended_at"], "title": "ConversationLogPublic", "description": "Conversation log public model."}, "ConversationLogUpdate": {"properties": {"duration": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Duration"}, "channel": {"$ref": "#/components/schemas/ChannelType"}, "status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "notes": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Notes"}, "extra_data": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Extra Data"}, "started_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Started At"}, "ended_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Ended At"}}, "type": "object", "required": ["channel"], "title": "ConversationLogUpdate", "description": "Conversation log update model."}, "ConversationLogsPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ConversationLogPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "ConversationLogsPublic", "description": "Conversation logs public model."}, "CustomerCreate": {"properties": {"email": {"anyOf": [{"type": "string", "maxLength": 255, "format": "email"}, {"type": "null"}], "title": "Email"}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "company_name": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Company Name"}, "phone_number": {"anyOf": [{"type": "string", "maxLength": 50}, {"type": "null"}], "title": "Phone Number"}, "address": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Address"}, "city": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "City"}, "state": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "State"}, "country": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Country"}, "postal_code": {"anyOf": [{"type": "string", "maxLength": 20}, {"type": "null"}], "title": "Postal Code"}, "date_of_birth": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Birth"}, "status": {"$ref": "#/components/schemas/CustomerStatus", "default": "lead"}, "lead_source": {"anyOf": [{"$ref": "#/components/schemas/LeadSource"}, {"type": "null"}]}, "channel": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Channel"}, "industry": {"anyOf": [{"type": "string", "maxLength": 200}, {"type": "null"}], "title": "Industry"}, "job_title": {"anyOf": [{"type": "string", "maxLength": 200}, {"type": "null"}], "title": "Job Title"}, "annual_revenue": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Annual Revenue"}, "company_size": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Company Size"}, "interests": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Interests"}, "notes": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Notes"}, "tags": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Tags"}, "lead_score": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Lead Score"}, "lifecycle_stage": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Lifecycle Stage"}, "last_contact_date": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Last Contact Date"}, "next_follow_up": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Next Follow Up"}, "custom_fields": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Custom Fields"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}}, "type": "object", "required": ["owner_id"], "title": "CustomerCreate", "description": "Customer create model."}, "CustomerDataUpdateRequest": {"properties": {"email": {"type": "string", "format": "email", "title": "Email"}, "first_name": {"type": "string", "title": "First Name"}, "last_name": {"type": "string", "title": "Last Name"}}, "type": "object", "required": ["email", "first_name", "last_name"], "title": "CustomerDataUpdateRequest", "description": "Request model for updating guest customer data via shareable link."}, "CustomerPublic": {"properties": {"email": {"anyOf": [{"type": "string", "maxLength": 255, "format": "email"}, {"type": "null"}], "title": "Email"}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "company_name": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Company Name"}, "phone_number": {"anyOf": [{"type": "string", "maxLength": 50}, {"type": "null"}], "title": "Phone Number"}, "address": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Address"}, "city": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "City"}, "state": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "State"}, "country": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Country"}, "postal_code": {"anyOf": [{"type": "string", "maxLength": 20}, {"type": "null"}], "title": "Postal Code"}, "date_of_birth": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Birth"}, "status": {"$ref": "#/components/schemas/CustomerStatus", "default": "lead"}, "lead_source": {"anyOf": [{"$ref": "#/components/schemas/LeadSource"}, {"type": "null"}]}, "channel": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Channel"}, "industry": {"anyOf": [{"type": "string", "maxLength": 200}, {"type": "null"}], "title": "Industry"}, "job_title": {"anyOf": [{"type": "string", "maxLength": 200}, {"type": "null"}], "title": "Job Title"}, "annual_revenue": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Annual Revenue"}, "company_size": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Company Size"}, "interests": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Interests"}, "notes": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Notes"}, "tags": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Tags"}, "lead_score": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Lead Score"}, "lifecycle_stage": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Lifecycle Stage"}, "last_contact_date": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Last Contact Date"}, "next_follow_up": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Next Follow Up"}, "custom_fields": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Custom Fields"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["owner_id", "id"], "title": "CustomerPublic", "description": "Customer public model."}, "CustomerStatus": {"type": "string", "enum": ["lead", "prospect", "qualified", "customer", "churned", "inactive"], "title": "CustomerStatus", "description": "Enum for customer status."}, "CustomerUpdate": {"properties": {"email": {"anyOf": [{"type": "string", "maxLength": 255, "format": "email"}, {"type": "null"}], "title": "Email"}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "company_name": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Company Name"}, "phone_number": {"anyOf": [{"type": "string", "maxLength": 50}, {"type": "null"}], "title": "Phone Number"}, "address": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Address"}, "city": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "City"}, "state": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "State"}, "country": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Country"}, "postal_code": {"anyOf": [{"type": "string", "maxLength": 20}, {"type": "null"}], "title": "Postal Code"}, "date_of_birth": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Birth"}, "status": {"$ref": "#/components/schemas/CustomerStatus", "default": "lead"}, "lead_source": {"anyOf": [{"$ref": "#/components/schemas/LeadSource"}, {"type": "null"}]}, "channel": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Channel"}, "industry": {"anyOf": [{"type": "string", "maxLength": 200}, {"type": "null"}], "title": "Industry"}, "job_title": {"anyOf": [{"type": "string", "maxLength": 200}, {"type": "null"}], "title": "Job Title"}, "annual_revenue": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Annual Revenue"}, "company_size": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Company Size"}, "interests": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Interests"}, "notes": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Notes"}, "tags": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Tags"}, "lead_score": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Lead Score"}, "lifecycle_stage": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Lifecycle Stage"}, "last_contact_date": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Last Contact Date"}, "next_follow_up": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Next Follow Up"}, "custom_fields": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Custom Fields"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}}, "type": "object", "required": ["owner_id"], "title": "CustomerUpdate", "description": "Customer update model."}, "CustomersPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CustomerPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "CustomersPublic", "description": "Customers public model."}, "GenericResponseModel": {"properties": {"message": {"type": "string", "title": "Message"}}, "type": "object", "required": ["message"], "title": "GenericResponseModel", "description": "Generic response model."}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "IntegrationCreate": {"properties": {"name": {"type": "string", "title": "Name"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "type": {"$ref": "#/components/schemas/IntegrationType"}, "provided_service": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Provided Service"}, "provider": {"$ref": "#/components/schemas/IntegrationProvider"}, "access_token": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Access Token"}, "refresh_token": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Refresh Token"}, "token_expires_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Token Expires At"}, "base_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Base Url"}, "api_key": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Api Key"}, "config": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Config"}, "status": {"$ref": "#/components/schemas/IntegrationStatus", "default": "pending"}, "last_sync_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Last Sync At"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message"}, "owner_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Owner Id"}}, "type": "object", "required": ["name", "type", "provider"], "title": "IntegrationCreate", "description": "Create integration."}, "IntegrationProvider": {"type": "string", "enum": ["CODYCO_PHONE", "GOOGLE_CALENDAR", "MICROSOFT_CALENDAR", "HUBSPOT", "SALESFORCE", "JIRA", "ZENDESK", "APALEO", "SIHOT", "OPERA_CLOUD", "CONFLUENCE", "NOTION", "CODYCO_WEBHOOK_SERVICE"], "title": "IntegrationProvider", "description": "Integration provider."}, "IntegrationPublic": {"properties": {"name": {"type": "string", "title": "Name"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "type": {"$ref": "#/components/schemas/IntegrationType"}, "provided_service": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Provided Service"}, "provider": {"$ref": "#/components/schemas/IntegrationProvider"}, "access_token": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Access Token"}, "refresh_token": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Refresh Token"}, "token_expires_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Token Expires At"}, "base_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Base Url"}, "api_key": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Api Key"}, "config": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Config"}, "status": {"$ref": "#/components/schemas/IntegrationStatus", "default": "pending"}, "last_sync_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Last Sync At"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["name", "type", "provider", "last_sync_at", "id", "owner_id", "created_at", "updated_at"], "title": "IntegrationPublic", "description": "Public integration model."}, "IntegrationStatus": {"type": "string", "enum": ["active", "inactive", "failed", "pending"], "title": "IntegrationStatus", "description": "Integration status."}, "IntegrationType": {"type": "string", "enum": ["calendar", "phone", "crm", "ticketing", "knowledge_base", "property_booking_system", "outbound_webhook_service", "pms_system"], "title": "IntegrationType", "description": "Integration type."}, "IntegrationUpdate": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "type": {"anyOf": [{"$ref": "#/components/schemas/IntegrationType"}, {"type": "null"}]}, "provided_service": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Provided Service"}, "provider": {"anyOf": [{"$ref": "#/components/schemas/IntegrationProvider"}, {"type": "null"}]}, "access_token": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Access Token"}, "refresh_token": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Refresh Token"}, "token_expires_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Token Expires At"}, "base_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Base Url"}, "api_key": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Api Key"}, "config": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Config"}, "status": {"anyOf": [{"$ref": "#/components/schemas/IntegrationStatus"}, {"type": "null"}]}, "last_sync_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Last Sync At"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message"}}, "type": "object", "title": "IntegrationUpdate", "description": "Update integration."}, "IntegrationsPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/IntegrationPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "IntegrationsPublic", "description": "Public integrations model."}, "ItemCreate": {"properties": {"title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Description"}}, "type": "object", "required": ["title"], "title": "ItemCreate", "description": "Item create model."}, "ItemPublic": {"properties": {"title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Description"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}}, "type": "object", "required": ["title", "id", "owner_id"], "title": "ItemPublic", "description": "Item public model."}, "ItemUpdate": {"properties": {"title": {"anyOf": [{"type": "string", "maxLength": 255, "minLength": 1}, {"type": "null"}], "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Description"}}, "type": "object", "title": "ItemUpdate", "description": "Item update model."}, "ItemsPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ItemPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "ItemsPublic", "description": "Items public model."}, "LeadSource": {"type": "string", "enum": ["website", "referral", "social_media", "email_campaign", "event", "cold_call", "partner", "other"], "title": "LeadSource", "description": "Enum for lead source."}, "MessageCreate": {"properties": {"content": {"type": "string", "title": "Content"}, "message_type": {"type": "string", "title": "Message Type", "default": "text"}, "extra_data": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Extra Data"}, "chat_room_id": {"type": "string", "format": "uuid", "title": "Chat Room Id"}, "sender_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Sender Id"}, "customer_sender_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Customer Sender Id"}, "sent_at": {"type": "string", "format": "date-time", "title": "Sent At"}, "conversation_log_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Conversation Log Id"}}, "type": "object", "required": ["content", "chat_room_id", "sent_at"], "title": "MessageCreate", "description": "Message create model."}, "MessagePublic": {"properties": {"content": {"type": "string", "title": "Content"}, "message_type": {"type": "string", "title": "Message Type", "default": "text"}, "extra_data": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Extra Data"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "conversation_log_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Conversation Log Id"}, "chat_room_id": {"type": "string", "format": "uuid", "title": "Chat Room Id"}, "sender_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Sender Id"}, "customer_sender_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Customer Sender Id"}, "sent_at": {"type": "string", "format": "date-time", "title": "Sent At"}, "delivered_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Delivered At"}, "read_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Read At"}}, "type": "object", "required": ["content", "id", "conversation_log_id", "chat_room_id", "sender_id", "customer_sender_id", "sent_at", "delivered_at", "read_at"], "title": "MessagePublic", "description": "Message public model."}, "MessageUpdate": {"properties": {"content": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Content"}, "message_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Message Type"}, "extra_data": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Extra Data"}}, "type": "object", "title": "MessageUpdate", "description": "Message update model."}, "MessagesPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/MessagePublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "MessagesPublic", "description": "Messages public model."}, "NewPassword": {"properties": {"token": {"type": "string", "title": "Token"}, "new_password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "New Password"}}, "type": "object", "required": ["token", "new_password"], "title": "NewPassword", "description": "New password model."}, "PMSType": {"type": "string", "enum": ["APALEO", "SIHOT", "OPERA_CLOUD"], "title": "PMSType", "description": "PMS type."}, "ParticipantCreate": {"properties": {"user_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "User Id"}, "customer_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Customer Id"}, "status": {"$ref": "#/components/schemas/ParticipantStatus", "default": "pending"}}, "type": "object", "title": "ParticipantCreate", "description": "Participant create model."}, "ParticipantPublic": {"properties": {"customer": {"anyOf": [{"$ref": "#/components/schemas/CustomerPublic"}, {"type": "null"}]}, "user": {"anyOf": [{"$ref": "#/components/schemas/UserPublic"}, {"type": "null"}]}}, "type": "object", "title": "ParticipantPublic", "description": "Participant public model."}, "ParticipantStatus": {"type": "string", "enum": ["pending", "accepted", "declined"], "title": "ParticipantStatus", "description": "Participant status."}, "ParticipantStatusUpdate": {"properties": {"status": {"$ref": "#/components/schemas/ParticipantStatus"}}, "type": "object", "required": ["status"], "title": "ParticipantStatusUpdate", "description": "Participant status update model."}, "PrivateUserCreate": {"properties": {"email": {"type": "string", "title": "Email"}, "password": {"type": "string", "title": "Password"}, "full_name": {"type": "string", "title": "Full Name"}, "is_verified": {"type": "boolean", "title": "Is Verified", "default": false}}, "type": "object", "required": ["email", "password", "full_name"], "title": "PrivateUserCreate", "description": "Private user create model."}, "ShareableLinkCreate": {"properties": {"title": {"type": "string", "maxLength": 255, "title": "Title", "description": "Human readable name for the link"}, "description": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Description", "description": "Optional description of the link"}, "share_token": {"type": "string", "maxLength": 128, "title": "Share Token", "description": "Token will auto-generate if not provided"}, "is_active": {"type": "boolean", "title": "Is Active", "description": "Whether the link is currently active", "default": true}, "expires_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Expires At", "description": "Optional expiration date for the link (UTC)"}, "access_count": {"type": "integer", "title": "Access Count", "description": "Number of times the link has been accessed", "default": 0}, "max_access_count": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Max Access Count", "description": "Optional maximum number of times the link can be accessed"}, "extra_data": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Extra Data", "description": "Additional metadata stored as JSON"}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}, "customer_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Customer Id"}, "conversation_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Conversation Id"}}, "type": "object", "required": ["title", "owner_id"], "title": "ShareableLinkCreate", "description": "Model for creating shareable links."}, "ShareableLinkPublic": {"properties": {"title": {"type": "string", "maxLength": 255, "title": "Title", "description": "Human readable name for the link"}, "description": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Description", "description": "Optional description of the link"}, "share_token": {"type": "string", "maxLength": 128, "title": "Share Token", "description": "Unique token used to access the shared content"}, "is_active": {"type": "boolean", "title": "Is Active", "description": "Whether the link is currently active", "default": true}, "expires_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Expires At", "description": "Optional expiration date for the link (UTC)"}, "access_count": {"type": "integer", "title": "Access Count", "description": "Number of times the link has been accessed", "default": 0}, "max_access_count": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Max Access Count", "description": "Optional maximum number of times the link can be accessed"}, "extra_data": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Extra Data", "description": "Additional metadata stored as JSON"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}, "customer_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Customer Id"}, "conversation_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Conversation Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "last_accessed_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Last Accessed At"}}, "type": "object", "required": ["title", "id", "owner_id", "customer_id", "conversation_id", "created_at", "updated_at", "last_accessed_at"], "title": "ShareableLinkPublic", "description": "Public model for shareable links."}, "ShareableLinkUpdate": {"properties": {"title": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Description"}, "is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}, "expires_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Expires At"}, "max_access_count": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Max Access Count"}, "extra_data": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Extra Data"}}, "type": "object", "title": "ShareableLinkUpdate", "description": "Model for updating shareable links."}, "ShareableLinksPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ShareableLinkPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "ShareableLinksPublic", "description": "Model for paginated shareable links response."}, "TaskCreate": {"properties": {"title": {"type": "string", "maxLength": 255, "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 1000}, {"type": "null"}], "title": "Description"}, "status": {"$ref": "#/components/schemas/TaskStatus", "default": "pending"}, "priority": {"$ref": "#/components/schemas/TaskPriority", "default": "medium"}, "due_date": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Due Date"}, "person_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Person Name"}, "location": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Location"}, "owner_approval_required": {"type": "boolean", "title": "Owner Approval Required", "default": false}, "chat_room_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Chat Room Id"}, "assignee_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Assignee Id"}, "customer_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Customer Id"}, "creator_id": {"type": "string", "format": "uuid", "title": "Creator Id"}, "id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Id"}}, "type": "object", "required": ["title", "creator_id"], "title": "TaskCreate", "description": "Task create model."}, "TaskPriority": {"type": "string", "enum": ["low", "medium", "high"], "title": "TaskPriority", "description": "Task priority."}, "TaskPublic": {"properties": {"title": {"type": "string", "maxLength": 255, "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 1000}, {"type": "null"}], "title": "Description"}, "status": {"$ref": "#/components/schemas/TaskStatus", "default": "pending"}, "priority": {"$ref": "#/components/schemas/TaskPriority", "default": "medium"}, "due_date": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Due Date"}, "person_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Person Name"}, "location": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Location"}, "owner_approval_required": {"type": "boolean", "title": "Owner Approval Required", "default": false}, "chat_room_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Chat Room Id"}, "assignee_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Assignee Id"}, "customer_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Customer Id"}, "creator_id": {"type": "string", "format": "uuid", "title": "Creator Id"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["title", "chat_room_id", "assignee_id", "creator_id", "id", "created_at", "updated_at"], "title": "TaskPublic", "description": "Task public model."}, "TaskStatus": {"type": "string", "enum": ["pending", "in_progress", "rejected", "completed"], "title": "TaskStatus", "description": "Task status."}, "TaskUpdate": {"properties": {"title": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Title"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "status": {"anyOf": [{"$ref": "#/components/schemas/TaskStatus"}, {"type": "null"}]}, "priority": {"anyOf": [{"$ref": "#/components/schemas/TaskPriority"}, {"type": "null"}]}, "due_date": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Due Date"}, "person_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Person Name"}, "location": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Location"}, "owner_approval_required": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Owner Approval Required"}, "assignee_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Assignee Id"}, "chat_room_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Chat Room Id"}}, "type": "object", "title": "TaskUpdate", "description": "Task update model."}, "TasksPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/TaskPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "TasksPublic", "description": "Tasks public model."}, "Token": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type", "default": "bearer"}}, "type": "object", "required": ["access_token"], "title": "Token", "description": "Token model."}, "UpdatePassword": {"properties": {"current_password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "Current Password"}, "new_password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "New Password"}}, "type": "object", "required": ["current_password", "new_password"], "title": "UpdatePassword", "description": "Update password model."}, "UserCreate": {"properties": {"email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "company_name": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Company Name"}, "date_of_birth": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Birth"}, "phone_number": {"anyOf": [{"type": "string", "maxLength": 50}, {"type": "null"}], "title": "Phone Number"}, "address": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Address"}, "occupation": {"anyOf": [{"type": "string", "maxLength": 200}, {"type": "null"}], "title": "Occupation"}, "language": {"anyOf": [{"type": "string", "maxLength": 10}, {"type": "null"}], "title": "Language"}, "status": {"$ref": "#/components/schemas/UserStatus", "default": "active"}, "user_type": {"$ref": "#/components/schemas/UserType", "default": "regular"}, "tags": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Tags"}, "business_activities": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Business Activities"}, "business_hours": {"anyOf": [{"items": {"type": "object"}, "type": "array"}, {"type": "null"}], "title": "Business Hours"}, "timezone": {"type": "string", "title": "Timezone", "default": "Europe/Berlin"}, "selected_features": {"items": {"$ref": "#/components/schemas/UserFeatures"}, "type": "array", "title": "Selected Features"}, "password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "Password"}}, "type": "object", "required": ["email", "password"], "title": "UserCreate", "description": "User create model."}, "UserFeatures": {"type": "string", "enum": ["appointment_management", "cold_call_transfer", "customer_management", "voice_bot", "task_management", "post_call_triggers", "post_call_default_email_trigger", "post_call_sms_trigger", "post_call_sms_booking_trigger", "post_call_webhook_trigger"], "title": "UserFeatures", "description": "Enum for user feature."}, "UserPublic": {"properties": {"email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "company_name": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Company Name"}, "date_of_birth": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Birth"}, "phone_number": {"anyOf": [{"type": "string", "maxLength": 50}, {"type": "null"}], "title": "Phone Number"}, "address": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Address"}, "occupation": {"anyOf": [{"type": "string", "maxLength": 200}, {"type": "null"}], "title": "Occupation"}, "language": {"anyOf": [{"type": "string", "maxLength": 10}, {"type": "null"}], "title": "Language"}, "status": {"$ref": "#/components/schemas/UserStatus", "default": "active"}, "user_type": {"$ref": "#/components/schemas/UserType", "default": "regular"}, "tags": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Tags"}, "business_activities": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Business Activities"}, "business_hours": {"anyOf": [{"items": {"type": "object"}, "type": "array"}, {"type": "null"}], "title": "Business Hours"}, "timezone": {"type": "string", "title": "Timezone", "default": "Europe/Berlin"}, "selected_features": {"items": {"$ref": "#/components/schemas/UserFeatures"}, "type": "array", "title": "Selected Features"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["email", "id"], "title": "UserPublic", "description": "User public model."}, "UserRegister": {"properties": {"email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "Password"}, "phone_number": {"type": "string", "maxLength": 50, "title": "Phone Number"}, "user_type": {"$ref": "#/components/schemas/UserType"}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}}, "type": "object", "required": ["email", "password", "phone_number", "user_type"], "title": "UserRegister", "description": "User register model."}, "UserStatus": {"type": "string", "enum": ["active", "inactive", "deleted"], "title": "UserStatus", "description": "Enum for user status."}, "UserType": {"type": "string", "enum": ["unregistered", "regular", "business", "system", "admin"], "title": "UserType", "description": "Enum for user type."}, "UserUpdate": {"properties": {"email": {"anyOf": [{"type": "string", "maxLength": 255, "format": "email"}, {"type": "null"}], "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "company_name": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Company Name"}, "date_of_birth": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Birth"}, "phone_number": {"anyOf": [{"type": "string", "maxLength": 50}, {"type": "null"}], "title": "Phone Number"}, "address": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Address"}, "occupation": {"anyOf": [{"type": "string", "maxLength": 200}, {"type": "null"}], "title": "Occupation"}, "language": {"anyOf": [{"type": "string", "maxLength": 10}, {"type": "null"}], "title": "Language"}, "status": {"$ref": "#/components/schemas/UserStatus", "default": "active"}, "user_type": {"$ref": "#/components/schemas/UserType", "default": "regular"}, "tags": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Tags"}, "business_activities": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Business Activities"}, "business_hours": {"anyOf": [{"items": {"type": "object"}, "type": "array"}, {"type": "null"}], "title": "Business Hours"}, "timezone": {"type": "string", "title": "Timezone", "default": "Europe/Berlin"}, "selected_features": {"items": {"$ref": "#/components/schemas/UserFeatures"}, "type": "array", "title": "Selected Features"}, "password": {"anyOf": [{"type": "string", "maxLength": 40, "minLength": 8}, {"type": "null"}], "title": "Password"}}, "type": "object", "title": "UserUpdate", "description": "User update model."}, "UserUpdateMe": {"properties": {"full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "email": {"anyOf": [{"type": "string", "maxLength": 255, "format": "email"}, {"type": "null"}], "title": "Email"}, "phone_number": {"anyOf": [{"type": "string", "maxLength": 50}, {"type": "null"}], "title": "Phone Number"}, "address": {"anyOf": [{"type": "string", "maxLength": 500}, {"type": "null"}], "title": "Address"}, "language": {"anyOf": [{"type": "string", "maxLength": 10}, {"type": "null"}], "title": "Language"}}, "type": "object", "title": "UserUpdateMe", "description": "Update user model."}, "UsersPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/UserPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "UsersPublic", "description": "Users public model."}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/api/v1/login/access-token"}}}}}}
